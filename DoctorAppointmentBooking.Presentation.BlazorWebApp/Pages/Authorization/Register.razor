@page "/register"
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<EditForm Model="registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <InputText id="email" class="form-control" @bind-Value="registerModel.Email"/>
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="registerModel.Password"/>
    </div>
    <div class="mb-3">
        <label for="role" class="form-label">Role</label>
        <InputRadioGroup @bind-Value="registerModel.Role" class="form-control"> 
            <div>
                <InputRadio  Value="_doctor" /> <label>Doctor</label>
            </div>
            <div>
                <InputRadio  Value="_patient" /> <label>Patient</label>
            </div>
        </InputRadioGroup>
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegisterDto registerModel = new RegisterDto();
    [Inject] private IRestClient RestClient { get; set; } = default!;
    [Inject] private BaseUrlConfiguration BaseUrlConfig { get; set; } = default!;
    private string _admin = "Admin";
    private string _doctor = "Doctor";
    private string _patient = "Patient";

    private async Task HandleRegister()
    {
        var request = new RestRequest($"{BaseUrlConfig.ApiBase}/v1/Auth/Register", Method.Post)
        {
            RequestFormat = DataFormat.Json
        };
        request.AddJsonBody(registerModel);

        try
        {
            var response = await RestClient.ExecuteAsync<ResultViewModel<string>>(request);
            if (response.IsSuccessful)
            {
                Snackbar.Add("Profile created successfully", Severity.Success);
                Navigation.NavigateTo("/login");
            }
            else
            {
                Snackbar.Add("Error creating profile: " + response.ErrorMessage, Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add("Exception creating profile: " + ex.Message, Severity.Error);
        }
    }

}