@page "/profile"
@attribute [Authorize(Roles = "Admin, Doctor, Patient")]
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<PageTitle>My Profile</PageTitle>
<h3>My Profile</h3>

@if (_user is not null)
{
    <MudPaper Elevation="4" Class="pa-4">
        <MudTextField T="string" Label="Email" @bind-Value="_user.Email" Variant="Variant.Outlined" />
        <MudTextField T="string" Label="User Name" @bind-Value="_user.UserName" Variant="Variant.Outlined" />
        <MudTextField Label="Old Password" @bind-Value="_user.OldPassword" For="@(() => _user.OldPassword)" InputType="InputType.Password" Variant="Variant.Outlined" Margin="Margin.Dense" />
        <MudTextField Label="New Password" @bind-Value="_user.NewPassword" For="@(() => _user.NewPassword)" InputType="InputType.Password" Variant="Variant.Outlined" Margin="Margin.Dense" />
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveProfile">Save</MudButton>
    </MudPaper>
}

@code {
    private UpdateUserDto _user = new();
    [Inject] private IRestClient RestClient { get; set; } = default!;
    [Inject] private BaseUrlConfiguration BaseUrlConfig { get; set; } = default!;
    [Inject] private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            var userId = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;

            if (!string.IsNullOrEmpty(userId))
            {
                try
                {
                    var request = new RestRequest($"{BaseUrlConfig.ApiBase}/v1/Auth/{userId}");
                    var response = await RestClient.GetAsync<ResultViewModel<UpdateUserDto>>(request);
                    _user = response?.Data;
                }
                catch (Exception ex)
                {
                    Snackbar.Add("Error loading user profile: " + ex.Message, Severity.Error);
                }
            }
        }
    }

    private async Task SaveProfile()
    {
        if (_user != null)
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            var userId = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
            var request = new RestRequest($"{BaseUrlConfig.ApiBase}/v1/Auth/{userId}", Method.Put)
                {
                    RequestFormat = DataFormat.Json
                };
            request.AddJsonBody(_user);

            try
            {
                var response = await RestClient.ExecuteAsync<ResultViewModel<UpdateUserDto>>(request);
                if (response.IsSuccessful)
                {
                    Snackbar.Add("Profile updated successfully", Severity.Success);
                }
                else
                {
                    Snackbar.Add("Error updating profile: " + response.ErrorMessage, Severity.Error);
                }
            }
            catch (Exception ex)
            {
                Snackbar.Add("Exception updating profile: " + ex.Message, Severity.Error);
            }
        }
    }
}
