# Stage 1: Build the application
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy the csproj files and restore as distinct layers
COPY ["MedicalAppointment.Presentation.BlazorWebApp/MedicalAppointment.Presentation.BlazorWebApp.csproj", "MedicalAppointment.Presentation.BlazorWebApp/"]
COPY ["DoctorAppointmentBooking.Application/DoctorAppointmentBooking.Application.csproj", "DoctorAppointmentBooking.Application/"]
COPY ["DoctorAppointmentBooking.Domain/DoctorAppointmentBooking.Domain.csproj", "DoctorAppointmentBooking.Domain/"]
COPY ["DoctorAppointmentBooking.Infrastructure/DoctorAppointmentBooking.Infrastructure.csproj", "DoctorAppointmentBooking.Infrastructure/"]
RUN dotnet restore "MedicalAppointment.Presentation.BlazorWebApp/MedicalAppointment.Presentation.BlazorWebApp.csproj"

# Copy everything else and build
COPY . .
WORKDIR "/src/MedicalAppointment.Presentation.BlazorWebApp"
RUN dotnet build "MedicalAppointment.Presentation.BlazorWebApp.csproj" -c Release -o /app/build

# Publish the application
RUN dotnet publish "MedicalAppointment.Presentation.BlazorWebApp.csproj" -c Release -o /app/publish

# Stage 2: Create the runtime image with Nginx
FROM nginx:alpine
COPY --from=build /app/publish/wwwroot /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
